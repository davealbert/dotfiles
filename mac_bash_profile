if [ $(uname) == Linux ]; then
	SUBL=/usr/local/bin/subl
else
	SUBL=/Applications/Sublime\ Text\ 2.app/Contents/MacOS/Sublime\ Text\ 2
fi

function sman() {
	 man "${1}" | col -b | open -f -a SUBL
}

function shh () {
	 OKPASS=0;
	 echo -n "Filename: ";
	 read file;

	 if [ "$file" == "" ]; then
	 echo "Bad filename.";
	 return 1;
	 fi

	 if [ -f "$file.enc.txt" ]; then
	 echo "File Exists"
	 return 1
	 fi

	 while [[ $OKPASS == 0 ]];
	 do
	 unset password
	 prompt="Password:"
	 while IFS= read -p "$prompt" -r -s -n 1 char
	 do
	 if [[ $char == $'\0' ]]
	 then
	 break
	 fi
	 prompt='*'
	 password+="$char"
	 done
	 echo;
	 unset confirm
	 prompt="Confirm:"
	 while IFS= read -p "$prompt" -r -s -n 1 char
	 do
	 if [[ $char == $'\0' ]]
	 then
	 break
	 fi
	 prompt='*'
	 confirm+="$char"
	 done
	 echo;



	 if [[ "$password" == "$confirm" ]]; then
	 OKPASS=1;
	 else
	 echo "Passwords do not match.";
	 fi
	 done
	 echo;

	 unset text;
	 echo "Text:";
	 prompt="";
	 while IFS= read -p "$prompt" -r -s -n 1 char
	 do
	 prompt=".";
	 if [[ $char == "" ]]; then
	 echo;
	 prompt="";
	 char=$'\n';
	 fi
	 if [[ $char == " " ]]; then
	 echo -n " ";
	 prompt="";
	 fi

	 if [[ $(printf "%d\n" \'$char) == 127 ]]; then
	 text="${text%?}";
	 echo -n -e "\b \b";
	 prompt="";
	 char="";
	 fi

	 if [[ $(printf "%d\n" \'$char) == 4 ]]; then
	 echo;
	 echo;
	 echo -n -e $"$text" | openssl enc -aes-256-cbc -pass pass:$password -out $file.enc.txt;
	 break;
	 fi
	 text+="$char";
	 done;
}

function parse_git_dirty {
	 [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}
function parse_git_branch {
	 git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/[\1$(parse_git_dirty)]/"
}

# Set prompt: " username@hostname/directory/tree $ " (with colors)

export PS1="\\[\\e[32m\\]\\u\\[\\e[0m\\]\\[\\e[32m\\]@\\h\\[\\e[36m\\]\\w \\[\\e[33m\\]\$(parse_git_branch)\\[\\e[0m\\]\\[\\e[33m\\]\$ \\[\\e[37m\\]"
#export PS1="\[\e[32;1m\]\u\[\e[0m\]\[\e[32m\]@\h\[\e[36m\]\w \[\e[33m\]\$(parse_git_branch)\[\e[0m\]\[\e[33m\]\$ \[\e[37;40m\]"
#export PS1="\[\e[32;1m\]\u\[\e[0m\]\[\e[32m\]@\h\[\e[36m\]\w \[\e[33m\]\$"
#export PS1='\u@\h \[\033[1;33m\]\w\[\033[0m\]$(parse_git_branch)$ '
set -o vi
export EDITOR=vim


#aliases
if [ $(uname) == Linux ]; then
alias ls='ls --color'
alias l='ls -ltr --color'
else
alias ls='ls -G'
alias l='ls -Gltr'
alias mysql='/Applications/MAMP/Library/bin/mysql'
alias mysqldump='/Applications/MAMP/Library/bin/mysqldump'
fi
alias a='grep -Ir TODO * > TODO;git add .;git commit -a;git push'
alias grep='grep --color'
alias d='screen bash -c "cd \"$PWD\" && exec $SHELL --login"'

alias vlc=/Applications/VLC.app/Contents/MacOS/VLC


declare -x PATH="/usr/local/bin:/usr/local/sbin:/usr/local/mysql/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin:$HOME/scripts"

[[ -s "/Users/davealbert/.rvm/scripts/rvm" ]] && source "/Users/davealbert/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*


# Tell me the battery percentage when I open bash
if [ $(uname) != Linux ]; then
echo "BNBMouseDevice" ;ioreg -c BNBMouseDevice | grep BatteryPercent
echo "BNBTrackpadDevice";ioreg -c BNBTrackpadDevice | grep BatteryPercent
echo "AppleBluetoothHIDKeyboard";ioreg -c AppleBluetoothHIDKeyboard | grep BatteryPercent
fi

export IRCNAME="I have nothing to say here."
COLUMNS=250

##
# Your previous /Users/davealbert/.bash_profile file was backed up as /Users/davealbert/.bash_profile.macports-saved_2012-08-03_at_07:27:59
##

# MacPorts Installer addition on 2012-08-03_at_07:27:59: adding an appropriate PATH variable for use with MacPorts.
export PATH=/opt/local/bin:/opt/local/sbin:$PATH
# Finished adapting your PATH environment variable for use with MacPorts.


if [ -d /usr/local/pgsql/bin ] ; then
PATH="/usr/local/pgsql/bin:${PATH}"
fi

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting


